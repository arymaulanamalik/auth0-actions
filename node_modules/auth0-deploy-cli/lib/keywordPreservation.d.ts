import { AssetTypes, KeywordMappings } from './types';
import APIHandler from './tools/auth0/handlers/default';
export declare const doesHaveKeywordMarker: (string: string, keywordMappings: KeywordMappings) => boolean;
export declare const getPreservableFieldsFromAssets: (asset: object, keywordMappings: KeywordMappings, resourceSpecificIdentifiers: Partial<{
    rules: string | string[];
    hooks: string | string[];
    actions: string | string[];
    triggers: string | string[];
    pages: string | string[];
    resourceServers: string | string[];
    clients: string | string[];
    branding: string | string[];
    connections: string | string[];
    roles: string | string[];
    prompts: string | string[];
    themes: string | string[];
    attackProtection: string | string[];
    clientGrants: string | string[];
    customDomains: string | string[];
    databases: string | string[];
    emailProvider: string | string[];
    emailTemplates: string | string[];
    guardianFactorProviders: string | string[];
    guardianFactors: string | string[];
    guardianFactorTemplates: string | string[];
    guardianPhoneFactorMessageTypes: string | string[];
    guardianPhoneFactorSelectedProvider: string | string[];
    guardianPolicies: string | string[];
    logStreams: string | string[];
    migrations: string | string[];
    organizations: string | string[];
    rulesConfigs: string | string[];
    tenant: string | string[];
}>, address?: string) => string[];
export declare const getAssetsValueByAddress: (address: string, assets: any) => any;
export declare const convertAddressToDotNotation: (assets: any, address: string, finalAddressTrail?: string) => string | null;
export declare const updateAssetsByAddress: (assets: object, address: string, newValue: string) => object;
export declare const preserveKeywords: ({ localAssets, remoteAssets, keywordMappings, auth0Handlers, }: {
    localAssets: object;
    remoteAssets: object;
    keywordMappings: KeywordMappings;
    auth0Handlers: (Pick<APIHandler, 'id' | 'type'> & {
        identifiers: (string | string[])[];
    })[];
}) => object;
