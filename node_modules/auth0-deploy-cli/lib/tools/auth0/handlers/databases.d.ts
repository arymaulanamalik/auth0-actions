import DefaultAPIHandler from './default';
import { CalculatedChanges, Assets } from '../../../types';
export declare const schema: {
    type: string;
    items: {
        type: string;
        properties: {
            strategy: {
                type: string;
                enum: string[];
                default: string;
            };
            name: {
                type: string;
            };
            options: {
                type: string;
                properties: {
                    customScripts: {
                        type: string;
                        properties: {};
                    };
                };
            };
        };
        required: string[];
    };
};
export default class DatabaseHandler extends DefaultAPIHandler {
    constructor(config: DefaultAPIHandler);
    objString(db: any): string;
    getClientFN(fn: 'create' | 'delete' | 'getAll' | 'update'): Function;
    getType(): Promise<import("../../../types").Asset>;
    calcChanges(assets: Assets): Promise<CalculatedChanges>;
    processChanges(assets: Assets): Promise<void>;
}
