"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.schema = void 0;
const default_1 = __importStar(require("./default"));
const logger_1 = __importDefault(require("../../../logger"));
exports.schema = {
    type: 'object',
    additionalProperties: { type: 'boolean' },
};
class MigrationsHandler extends default_1.default {
    constructor(options) {
        super(Object.assign(Object.assign({}, options), { type: 'migrations' }));
    }
    //TODO: standardize empty object literal with more intentional empty indicator
    getType() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const migrations = yield this.client.migrations.getMigrations();
                return migrations.flags;
            }
            catch (err) {
                if (err.statusCode === 404)
                    return {};
                throw err;
            }
        });
    }
    // Run at the end since switching a flag will depend on other applying other changes
    processChanges(assets) {
        return __awaiter(this, void 0, void 0, function* () {
            const { migrations } = assets;
            if (migrations && Object.keys(migrations).length > 0) {
                const flags = yield this.removeUnavailableMigrations(migrations);
                if (Object.keys(flags).length > 0) {
                    yield this.client.migrations.updateMigrations({ flags });
                    this.updated += 1;
                    this.didUpdate(flags);
                }
            }
        });
    }
    logUnavailableMigrations(ignoreUnavailableMigrations, ignoredMigrations) {
        if (ignoreUnavailableMigrations) {
            logger_1.default.info(`The following migrations are not available '${ignoredMigrations.join(',')}'. The migrations will be ignored because you have AUTH0_IGNORE_UNAVAILABLE_MIGRATIONS=true in your configuration.`);
        }
        else {
            logger_1.default.warn(`The following disabled migrations are not available '${ignoredMigrations.join(',')}'. The migrations will be ignored, remove the migrations to avoid future warnings.`);
        }
    }
    removeUnavailableMigrations(migrations) {
        return __awaiter(this, void 0, void 0, function* () {
            const flags = Object.assign({}, migrations);
            const ignoreUnavailableMigrations = !!this.config('AUTH0_IGNORE_UNAVAILABLE_MIGRATIONS');
            const existingMigrations = yield this.getType();
            const unavailableMigrations = Object.keys(flags).filter((flag) => !(flag in existingMigrations));
            const ignoredMigrations = unavailableMigrations.filter((flag) => ignoreUnavailableMigrations || flags[flag] === false);
            if (ignoredMigrations.length > 0) {
                this.logUnavailableMigrations(ignoreUnavailableMigrations, ignoredMigrations);
                ignoredMigrations.forEach((flag) => delete flags[flag]);
            }
            return flags;
        });
    }
}
__decorate([
    (0, default_1.order)('150')
], MigrationsHandler.prototype, "processChanges", null);
exports.default = MigrationsHandler;
//# sourceMappingURL=migrations.js.map