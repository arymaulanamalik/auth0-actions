import DefaultHandler from './default';
import { Asset, Assets, CalculatedChanges } from '../../../types';
export declare const excludeSchema: {
    type: string;
    items: {
        type: string;
    };
};
export declare const schema: {
    type: string;
    items: {
        type: string;
        default: never[];
        properties: {
            script: {
                type: string;
                description: string;
                default: string;
            };
            name: {
                type: string;
                description: string;
                pattern: string;
            };
            order: {
                type: string[];
                description: string;
                default: null;
            };
            enabled: {
                type: string;
                description: string;
                default: boolean;
            };
            stage: {
                type: string;
                description: string;
                default: string;
                enum: string[];
            };
        };
        required: string[];
    };
};
export default class RulesHandler extends DefaultHandler {
    existing: Asset[];
    constructor(options: DefaultHandler);
    getType(): Promise<Asset[] | null>;
    objString(rule: any): string;
    calcChanges(assets: any, includeExcluded?: boolean): Promise<CalculatedChanges & {
        reOrder: Asset[];
    }>;
    validate(assets: Assets): Promise<void>;
    processChanges(assets: Assets): Promise<void>;
}
