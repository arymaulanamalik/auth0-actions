"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.schema = exports.supportedTemplates = void 0;
const default_1 = __importStar(require("./default"));
const constants_1 = __importDefault(require("../../constants"));
exports.supportedTemplates = constants_1.default.EMAIL_TEMPLATES_NAMES.filter((p) => p.includes('.json')).map((p) => p.replace('.json', ''));
exports.schema = {
    type: 'array',
    items: {
        type: 'object',
        properties: {
            template: { type: 'string', enum: exports.supportedTemplates },
            body: { type: 'string', default: '' },
        },
        required: ['template'],
    },
};
class EmailTemplateHandler extends default_1.default {
    constructor(options) {
        super(Object.assign(Object.assign({}, options), { type: 'emailTemplates', identifiers: ['template'] }));
    }
    getType() {
        return __awaiter(this, void 0, void 0, function* () {
            const emailTemplates = yield Promise.all(constants_1.default.EMAIL_TEMPLATES_TYPES.map((name) => __awaiter(this, void 0, void 0, function* () {
                try {
                    const template = yield this.client.emailTemplates.get({ name });
                    return template;
                }
                catch (err) {
                    // Ignore if not found, else throw error
                    if (err.statusCode !== 404) {
                        throw err;
                    }
                }
            })));
            const nonEmptyTemplates = emailTemplates.filter((template) => !!template);
            return nonEmptyTemplates;
        });
    }
    updateOrCreate(emailTemplate) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const identifierField = this.identifiers[0];
                const params = { name: emailTemplate[identifierField] };
                const updated = yield this.client.emailTemplates.update(params, emailTemplate);
                delete updated.body;
                this.didUpdate(updated);
                this.updated += 1;
            }
            catch (err) {
                if (err.statusCode === 404) {
                    // Create if it does not exist
                    const created = yield this.client.emailTemplates.create(emailTemplate);
                    delete created.body;
                    this.didCreate(created);
                    this.created += 1;
                }
                else {
                    throw err;
                }
            }
        });
    }
    // Run after email provider changes
    processChanges(assets) {
        return __awaiter(this, void 0, void 0, function* () {
            const { emailTemplates } = assets;
            // Do nothing if not set
            if (!emailTemplates || !emailTemplates.length)
                return;
            yield Promise.all(emailTemplates.map((emailTemplate) => __awaiter(this, void 0, void 0, function* () {
                yield this.updateOrCreate(emailTemplate);
            })));
        });
    }
}
__decorate([
    (0, default_1.order)('60')
], EmailTemplateHandler.prototype, "processChanges", null);
exports.default = EmailTemplateHandler;
//# sourceMappingURL=emailTemplates.js.map