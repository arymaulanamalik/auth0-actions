import DefaultHandler from './default';
import { Asset, Assets, CalculatedChanges } from '../../../types';
export declare const schema: {
    type: string;
    items: {
        type: string;
        properties: {
            name: {
                type: string;
            };
            display_name: {
                type: string;
            };
            branding: {
                type: string;
            };
            metadata: {
                type: string;
            };
            connections: {
                type: string;
                items: {
                    type: string;
                    properties: {
                        connection_id: {
                            type: string;
                        };
                        assign_membership_on_login: {
                            type: string;
                        };
                    };
                };
            };
        };
        required: string[];
    };
};
export default class OrganizationsHandler extends DefaultHandler {
    existing: Asset[];
    constructor(config: DefaultHandler);
    deleteOrganization(org: any): Promise<void>;
    deleteOrganizations(data: Asset[]): Promise<void>;
    createOrganization(org: any): Promise<Asset>;
    createOrganizations(creates: CalculatedChanges['create']): Promise<void>;
    updateOrganization(org: any, organizations: any): Promise<{
        id: any;
    }>;
    updateOrganizations(updates: CalculatedChanges['update'], orgs: Asset[]): Promise<void>;
    getType(): Promise<Asset[]>;
    processChanges(assets: Assets): Promise<void>;
}
