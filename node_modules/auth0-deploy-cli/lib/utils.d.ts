import { Auth0 } from './tools';
import { Asset, Assets, Config, KeywordMappings } from './types';
export declare function isDirectory(filePath: string): boolean;
export declare function isFile(filePath: string): boolean;
export declare function getFiles(folder: string, exts: string[]): string[];
export declare function loadJSON(file: string, opts?: {
    disableKeywordReplacement: boolean;
    mappings: KeywordMappings;
}): any;
export declare function dumpJSON(file: string, mappings: {
    [key: string]: any;
}): void;
export declare function existsMustBeDir(folder: string): boolean;
export declare function toConfigFn(data: Config): (arg0: keyof Config) => any;
export declare function stripIdentifiers(auth0: Auth0, assets: Assets): {
    actions?: import("./tools/auth0/handlers/actions").Action[] | null | undefined;
    attackProtection?: Asset | null | undefined;
    branding?: (Asset & {
        templates?: {
            template: string;
            body: string;
        }[] | null | undefined;
    }) | null | undefined;
    clients?: import("./tools/auth0/handlers/clients").Client[] | null | undefined;
    clientGrants?: import("./tools/auth0/handlers/clientGrants").ClientGrant[] | null | undefined;
    connections?: Asset[] | null | undefined;
    customDomains?: Asset[] | null | undefined;
    databases?: Asset[] | null | undefined;
    emailProvider?: Asset | null | undefined;
    emailTemplates?: Asset[] | null | undefined;
    guardianFactorProviders?: Asset[] | null | undefined;
    guardianFactors?: Asset[] | null | undefined;
    guardianFactorTemplates?: Asset[] | null | undefined;
    guardianPhoneFactorMessageTypes?: {
        message_types: Asset[];
    } | null | undefined;
    guardianPhoneFactorSelectedProvider?: Asset | null | undefined;
    guardianPolicies?: {
        policies: Asset[];
    } | null | undefined;
    hooks?: Asset[] | null | undefined;
    logStreams?: import("./tools/auth0/handlers/logStreams").LogStream[] | null | undefined;
    migrations?: Asset[] | null | undefined;
    organizations?: Asset[] | null | undefined;
    pages?: import("./tools/auth0/handlers/pages").Page[] | null | undefined;
    prompts?: Partial<import("./tools/auth0/handlers/prompts").PromptSettings & {
        customText: Partial<{
            id: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            ar: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            bg: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            bs: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "ca-ES": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            cs: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            cy: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            da: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            de: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            el: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            en: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            es: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            et: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "eu-ES": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            fi: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            fr: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "fr-CA": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "fr-FR": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "gl-ES": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            he: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            hi: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            hr: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            hu: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            is: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            it: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            ja: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            ko: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            lt: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            lv: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            nb: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            nl: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            nn: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            no: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            pl: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            pt: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "pt-BR": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "pt-PT": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            ro: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            ru: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            sk: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            sl: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            sr: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            sv: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            th: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            tr: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            uk: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            vi: Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "zh-CN": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
            "zh-TW": Partial<import("./tools/auth0/handlers/prompts").PromptsCustomText>;
        }>;
    }> | null | undefined;
    resourceServers?: import("./tools/auth0/handlers/resourceServers").ResourceServer[] | null | undefined;
    roles?: Asset[] | null | undefined;
    rules?: Asset[] | null | undefined;
    rulesConfigs?: Asset[] | null | undefined;
    tenant?: import("./tools/auth0/handlers/tenant").Tenant | null | undefined;
    triggers?: Asset[] | null | undefined;
    exclude?: {
        [key: string]: string[];
    } | undefined;
    clientsOrig?: Asset[] | null | undefined;
    themes?: import("./tools/auth0/handlers/themes").Theme[] | null | undefined;
};
export declare function sanitize(str: string): string;
type ImportantFields = {
    name: string | null;
    client_id: string | null;
    audience: string | null;
    template: string | null;
    identifier: string | null;
    strategy: string | null;
    script: string | null;
    stage: string | null;
    id: string | null;
};
export declare function formatResults(item: any): Partial<ImportantFields>;
export declare function recordsSorter(a: Partial<ImportantFields>, b: Partial<ImportantFields>): number;
export declare function clearTenantFlags(tenant: Asset): void;
export declare function ensureProp(obj: Asset, props: string): void;
export declare function clearClientArrays(client: Asset): Asset;
export declare function convertClientIdToName(clientId: string, knownClients?: Asset[]): string;
export declare function mapClientID2NameSorted(enabledClients: string[], knownClients: Asset[]): string[];
export {};
