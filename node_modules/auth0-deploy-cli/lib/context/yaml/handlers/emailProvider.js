"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const defaults_1 = require("../../defaults");
function parse(context) {
    return __awaiter(this, void 0, void 0, function* () {
        const { emailProvider } = context.assets;
        if (!emailProvider)
            return { emailProvider: null };
        return {
            emailProvider,
        };
    });
}
function dump(context) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!context.assets.emailProvider)
            return { emailProvider: null };
        const emailProvider = (() => {
            var _a;
            const { emailProvider } = context.assets;
            const excludedDefaults = ((_a = context.assets.exclude) === null || _a === void 0 ? void 0 : _a.defaults) || [];
            if (emailProvider && !excludedDefaults.includes('emailProvider')) {
                // Add placeholder for credentials as they cannot be exported
                return (0, defaults_1.emailProviderDefaults)(emailProvider);
            }
            return emailProvider;
        })();
        return {
            emailProvider,
        };
    });
}
const emailProviderHandler = {
    parse,
    dump,
};
exports.default = emailProviderHandler;
//# sourceMappingURL=emailProvider.js.map