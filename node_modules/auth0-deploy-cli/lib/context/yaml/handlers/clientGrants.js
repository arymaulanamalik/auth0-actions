"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../../../utils");
function parse(context) {
    return __awaiter(this, void 0, void 0, function* () {
        const { clientGrants } = context.assets;
        if (!clientGrants)
            return { clientGrants: null };
        return {
            clientGrants,
        };
    });
}
function dump(context) {
    return __awaiter(this, void 0, void 0, function* () {
        const { clientGrants, clients } = context.assets;
        if (!clientGrants)
            return { clientGrants: null };
        // Convert client_id to the client name for readability
        return {
            clientGrants: clientGrants.map((grant) => {
                const dumpGrant = Object.assign({}, grant);
                dumpGrant.client_id = (0, utils_1.convertClientIdToName)(dumpGrant.client_id, clients || []);
                return dumpGrant;
            }),
        };
    });
}
const clientGrantsHandler = {
    parse,
    dump,
};
exports.default = clientGrantsHandler;
//# sourceMappingURL=clientGrants.js.map