"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const utils_1 = require("../../../utils");
function parse(context) {
    const baseFolder = path_1.default.join(context.filePath);
    if (!(0, utils_1.existsMustBeDir)(baseFolder))
        return { migrations: null }; // Skip
    const migrationsFile = path_1.default.join(baseFolder, 'migrations.json');
    if (!(0, utils_1.isFile)(migrationsFile))
        return { migrations: null };
    /* eslint-disable camelcase */
    const migrations = (0, utils_1.loadJSON)(migrationsFile, {
        mappings: context.mappings,
        disableKeywordReplacement: context.disableKeywordReplacement,
    });
    return { migrations };
}
function dump(context) {
    return __awaiter(this, void 0, void 0, function* () {
        const { migrations } = context.assets;
        if (!migrations || Object.keys(migrations).length === 0)
            return; // Skip, nothing to dump
        const migrationsFile = path_1.default.join(context.filePath, 'migrations.json');
        (0, utils_1.dumpJSON)(migrationsFile, migrations);
    });
}
const migrationsHandler = {
    parse,
    dump,
};
exports.default = migrationsHandler;
//# sourceMappingURL=migrations.js.map